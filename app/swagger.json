{
  "swagger": "2.0",
  "info": {
    "version": "1.0.0",
    "title": "Yet Another Node.js Blogg Application API",
    "description": "Yet Another Node.js Blogg Application API",
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    }
  },
  "host": "localhost:8080",
  "basePath": "/",
  "tags": [
    {
      "name": "Users",
      "description": "API for pets in the system"
    }
  ],
  "schemes": [
    "http"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/pets": {
      "post": {
        "tags": [
          "Pets"
        ],
        "description": "Create new pet in system",
        "parameters": [
          {
            "name": "pet",
            "in": "body",
            "description": "Pet details that we want to enter",
            "schema": {
              "$ref": "#/definitions/Pet"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "New pet is created",
            "schema": {
              "$ref": "#/definitions/Pet"
            }
          }
        }
      },
      "get": {
        "tags": [
          "Pets"
        ],
        "summary": "Get all pets in system",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Pets"
            }
          }
        }
      }
    },
    "/pets/ById/{petId}": {
      "parameters": [
        {
          "name": "petId",
          "in": "path",
          "required": true,
          "description": "ID of pet that we want to find",
          "type": "string"
        }
      ],
      "get": {
        "tags": [
          "Pets"
        ],
        "summary": "Get pet with given ID",
        "responses": {
          "200": {
            "description": "Pet is found",
            "schema": {
              "$ref": "#/definitions/Pet"
            }
          }
        }
      },
      "delete": {
        "summary": "Delete user with given ID",
        "tags": [
          "Users"
        ],
        "responses": {
          "200": {
            "description": "User is deleted",
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        }
      },
      "put": {
        "summary": "Update user with give ID",
        "tags": [
          "Users"
        ],
        "parameters": [
          {
            "name": "user",
            "in": "body",
            "description": "User with new values of properties",
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User is updated",
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "Pet": {
      "properties": {
        "category": {
            "categoryName": {
            "type": "string",
            "uniqueItems": true
            }
        },
        "name": {
          "type": "string"
        },
        "photoUrl": {
          "type": "string"
        },
        "status": {
            "type": "string"
        }
      }
    },
    "Pets": {
      "type": "array",
      "$ref": "#/definitions/Pet"
    }
  }
}
