{
  "swagger": "2.0",
  "info": {
    "version": "1.0.0",
    "title": "PET STORE",
    "description": "Node.js Application API for Pet Store",
    "license": {
      "name": "Soumya",
      "url": "https://opensource.org/licenses/MIT"
    }
  },
  "host": "localhost:3000",
  "basePath": "/",
  "tags": [
    {
      "name": "Pets",
      "description": "API for pets in the system"
    }
  ],
  "schemes": [
    "http"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/pets": {
      "post": {
        "tags": [
          "Pets"
        ],
        "description": "Create new pet in system",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Pet details that we want to enter",
            "schema": {
              "$ref": "#/definitions/Pet"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "New pet is created",
            "schema": {
              "$ref": "#/definitions/Pet"
            }
          },
          "405": {
            "description": "Invalid Input"
          }
        }
      },
      "get": {
        "tags": [
          "Pets"
        ],
        "summary": "Get all pets in system",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Pets"
            }
          },
          "404": {
            "description": "Pet not found"
          },
          "400": {
            "description": "Invalid ID supplied"
          }
        }
      }
    },
    "/pets/ById/{petId}": {
      "parameters": [
        {
          "name": "petId",
          "in": "path",
          "required": true,
          "description": "ID of pet that we want to find",
          "type": "string"
        }
      ],
      "get": {
        "tags": [
          "Pets"
        ],
        "summary": "Get pet with given ID",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Pet is found",
            "schema": {
              "$ref": "#/definitions/Pet"
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Pet not found"
          }
        }
      }
    },
   "/pets/ByName/{petName}": {
    "parameters": [
      {
        "name": "petName",
        "in": "path",
        "required": true,
        "description": "Name of pet that we want to find",
        "type": "string"
      }
    ],
    "get": {
      "tags": [
        "Pets"
      ],
      "summary": "Get pet with given name",
      "produces": [
        "application/json"
      ],
      "responses": {
        "200": {
          "description": "Pet is found",
          "schema": {
            "$ref": "#/definitions/Pet"
          }
        },
        "400": {
          "description": "Invalid name"
        }
      }
    }
   },
   "/pets/{petId}": {
    "parameters": [
      {
        "name": "petId",
        "in": "path",
        "required": true,
        "description": "ID of pet that we want to find",
        "type": "string"
      }
    ],
    "delete": {
      "summary": "Delete pet details with given ID",
      "tags": [
        "Pets"
      ],
      "responses": {
        "200": {
          "description": "Pet is deleted",
          "schema": {
            "$ref": "#/definitions/Pet"
          }
        },
        "400": {
          "description": "Invalid ID supplied"
        },
        "404": {
          "description": "Pet not found"
        }
      }
    },
    "put": {
      "tags": [
        "Pets"
      ],
      "summary": "Update petDetails with given ID",
      "operationId": "updatePet",
      "consumes": [
        "application/json"
      ],
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "in": "body",
          "name": "body",
          "description": "Pet with new values of properties",
          "required": true,
          "schema": {
            "$ref": "#/definitions/Pet"
          }
        }
      ],
      "responses": {
        "200": {
          "description": "Pet is updated",
          "schema": {
            "$ref": "#/definitions/Pet"
          }
        },
        "400": {
          "description": "Invalid ID supplied"
        },
        "404": {
          "description": "Pet not found"
        },
        "405": {
          "description": "Validation exception"
        }
      }
    }
   }
  },
  "definitions": {
    "Category": {
      "type": "object",
      "properties": {
        "categoryName": {
          "type": "string"
        }
      }
    },
    "Pet": {
      "type": "object",
      "required": [
        "name",
        "photoUrl"
      ],
      "properties": {
        "category": {
          "$ref": "#definitions/Category"
        },
        "name": {
          "type": "string"
        },
        "photoUrl": {
          "type": "string"
        },
        "status": {
          "type": "string",
          "description": "pet status in the store",
          "enum": [
            "available",
            "pending",
            "sold"
          ]
        }
      }
    }
  }
}
